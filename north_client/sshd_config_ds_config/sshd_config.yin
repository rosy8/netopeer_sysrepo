<?xml version="1.0" encoding="UTF-8"?>
<module xmlns="urn:ietf:params:xml:ns:yang:yin:1" xmlns:ss="urn:ietf:params:xml:ns:yang:ssh:sshd_config" xmlns:inet="urn:ietf:params:xml:ns:yang:ietf-inet-types" name="sshd_config">
  <namespace uri="urn:ietf:params:xml:ns:yang:ssh:sshd_config"/>
  <prefix value="ss"/>
  <import module="ietf-inet-types">
    <prefix value="inet"/>
  </import>
  <organization>
    <text>sysrepo.org</text>
  </organization>
  <description>
    <text>Yang module for sshd configuration</text>
  </description>
  <contact>
    <text>nobody@sysrepo.org</text>
  </contact>
  <revision date="2015-04-22">
    <reference>
      <text>https://github.com/sysrepo/yanger</text>
    </reference>
  </revision>
  <container name="sshd_config_options">
    <config value="true"/>
    <description>
      <text>Keywords from sshd_config BSD man page and their value types.</text>
    </description>
    <reference>
      <text>BSD File Formats Manual, SSHD_CONFIG(5).</text>
    </reference>
    <leaf-list name="AcceptEnv">
      <description>
        <text>Specifies what environment variables sent by the client will be
 copied into the session's environment.</text>
      </description>
      <type name="string"/>
      <when condition="../Protocol = 2"/>
    </leaf-list>
    <leaf name="AddressFamily">
      <description>
        <text>Specifies which address family should be used by sshd.</text>
      </description>
      <type name="enumeration">
        <enum name="ipv4"/>
        <enum name="ipv6"/>
        <enum name="any"/>
      </type>
      <default value="any"/>
    </leaf>
    <leaf name="AllowAgentForwarding">
      <description>
        <text>Specifies whether ssh-agent forwarding is permitted.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf-list name="AllowGroups">
      <description>
        <text>This keyword can be followed by a list of group name patterns,
separated by spaces.</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf name="AllowTcpForwarding">
      <description>
        <text>Specifies whether TCP forwarding is permitted.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
        <enum name="local"/>
        <enum name="remote"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="AllowUsers">
      <description>
        <text>This keyword can be followed by a list of user name patterns,
separated by spaces.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="AuthenticationMethods">
      <description>
        <text>Specifies the authentication methods that must be successfully
completed for a user to be granted access.  This option
must be followed by one or more comma-separated lists of authentication
method names.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="AuthorizedKeysCommand">
      <description>
        <text>Specifies a program to be used to look up the user's public keys.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf-list name="AuthorizedKeysCommandUser">
      <description>
        <text>Specifies the user under whose account the AuthorizedKeysCommand is run.</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf name="AuthorizedKeysFile">
      <description>
        <text>Specifies the file that contains the public keys that can be used for user
authentication.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="AuthorizedPrincipalsFile">
      <description>
        <text>Specifies a file that lists principal names that are accepted for certificate
authentication.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="Banner">
      <description>
        <text>The contents of the specified file are sent to the remote user before
authentication is allowed.</text>
      </description>
      <type name="string"/>
      <when condition="../Protocol = 2"/>
    </leaf>
    <leaf name="ChallengeResponseAuthentication">
      <description>
        <text>Specifies whether challenge-response authentication is allowed (e.g. via PAM).</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="ChrootDirectory">
      <description>
        <text>Specifies the pathname of a directory to chroot to after authentication.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="Ciphers">
      <description>
        <text>Specifies the ciphers allowed for protocol version 2.</text>
      </description>
      <type name="string"/>
      <default value="aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,\&#10;       aes128-gcm@openssh.com,aes256-gcm@openssh.com, \&#10;       chacha20-poly1305@openssh.com,\&#10;       aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,\&#10;       aes256-cbc,arcfour"/>
    </leaf>
    <leaf name="ClientAliveCountMax">
      <description>
        <text>Sets the number of client alive messages which may be sent without sshd
receiving any messages back from the client.</text>
      </description>
      <type name="uint16"/>
      <default value="3"/>
      <when condition="../Protocol = 2"/>
    </leaf>
    <leaf name="ClientAliveInterval">
      <description>
        <text>Sets a timeout interval in seconds after which if no data has been received
from the client, sshd will send a message through the encrypted channel
to request a response from the client.</text>
      </description>
      <type name="uint16"/>
      <default value="0"/>
      <when condition="../Protocol = 2"/>
    </leaf>
    <leaf name="Compression">
      <description>
        <text>Specifies whether compression is allowed, or delayed until the user has
authenticated successfully.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="delayed"/>
        <enum name="no"/>
      </type>
      <default value="delayed"/>
    </leaf>
    <leaf name="DebianBanner">
      <description>
        <text>Specifies whether the distribution-specified extra version suffix is
included during initial protocol handshake.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
      <when condition="../OS = 'Debian'"/>
    </leaf>
    <leaf name="DenyGroups">
      <description>
        <text>This keyword can be followed by a list of group name patterns, separated by spaces.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="DenyUsers">
      <description>
        <text>This keyword can be followed by a list of user name patterns, separated by spaces.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="ForceCommand">
      <description>
        <text>Forces the execution of the command specified by ForceCommand,
ignoring any command supplied by the client and  ~/.ssh/rc if present.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="GatewayPorts">
      <description>
        <text>Specifies whether remote hosts are allowed to connect to ports forwarded for the client.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
    </leaf>
    <leaf name="GSSAPIAuthentication">
      <description>
        <text>Specifies whether user authentication based on GSSAPI is allowed.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
      <when condition="../Protocol = 2"/>
    </leaf>
    <leaf name="GSSAPIKeyExchange">
      <description>
        <text>Specifies whether key exchange based on GSSAPI is allowed.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
      <when condition="../Protocol = 2"/>
    </leaf>
    <leaf name="GSSAPICleanupCredentials">
      <description>
        <text>Specifies whether to automatically destroy the user's credentials cache on logout.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
      <when condition="../Protocol = 2"/>
    </leaf>
    <leaf name="GSSAPIStrictAcceptorCheck">
      <description>
        <text>Determines whether to be strict about the identity of the GSSAPI acceptor a client authenticates against.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
      <when condition="../Protocol = 2"/>
    </leaf>
    <leaf name="GSSAPIStoreCredentialsOnRekey">
      <description>
        <text>Controls whether the user's GSSAPI credentials should be updated following
a successful connection rekeying.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
      <when condition="../Protocol = 2"/>
    </leaf>
    <leaf name="HostbasedAuthentication">
      <description>
        <text>Specifies whether rhosts or /etc/hosts.equiv authentication together with
successful public key client host authentication is allowed (host-based authentication).</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
      <when condition="../Protocol = 2"/>
    </leaf>
    <leaf name="HostbasedUsesNameFromPacketOnly">
      <description>
        <text>Specifies whether or not the server will attempt to perform a reverse name
lookup when matching the name in the ~/.shosts, ~/.rhosts, and /etc/hosts.equiv
files during HostbasedAuthentication.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
    </leaf>
    <leaf name="HostCertificate">
      <description>
        <text>Specifies a file containing a public host certificate.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="HostKey">
      <description>
        <text>Specifies a file containing a private host key used by SSH.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="HostKeyAgent">
      <description>
        <text>Identifies the UNIX-domain socket used to communicate with an agent that has access to the private host keys.</text>
      </description>
      <type name="uint16"/>
    </leaf>
    <leaf name="IgnoreRhosts">
      <description>
        <text>Specifies that .rhosts and .shosts files will not be used in RhostsRSAAuthentication or HostbasedAuthentication.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="IgnoreUserKnownHosts">
      <description>
        <text>Specifies whether sshd should ignore the user's ~/.ssh/known_hosts during RhostsRSAAuthentication or
HostbasedAuthentication.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
    </leaf>
    <leaf name="IPQoS">
      <description>
        <text>Specifies the IPv4 type-of-service or DSCP class for the connection.</text>
      </description>
      <type name="string"/>
      <default value="lowdelay"/>
    </leaf>
    <leaf name="KbdInteractiveAuthentication">
      <description>
        <text>Specifies whether to allow keyboard-interactive authentication.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="KerberosAuthentication">
      <description>
        <text>Specifies whether the password provided by the user for PasswordAuthentication
will be validated through the Kerberos KDC.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
    </leaf>
    <leaf name="KerberosGetAFSToken">
      <description>
        <text>If AFS is active and the user has a Kerberos 5 TGT, attempt to acquire an AFS
token before accessing the user's home directory.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
    </leaf>
    <leaf name="KerberosOrLocalPasswd">
      <description>
        <text>If password authentication through Kerberos fails then the password will be
validated via any additional local mechanism such as /etc/passwd.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="KerberosTicketCleanup">
      <description>
        <text>Specifies whether to automatically destroy the user's ticket cache file on logout.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="KexAlgorithms">
      <description>
        <text>Specifies the available KEX (Key Exchange) algorithms.</text>
      </description>
      <type name="string"/>
      <default value="curve25519-sha256@libssh.org,\&#10;ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,\&#10;diffie-hellman-group-exchange-sha256,\&#10;diffie-hellman-group-exchange-sha1,\&#10;diffie-hellman-group14-sha1,\&#10;diffie-hellman-group1-sha1"/>
    </leaf>
    <leaf name="KeyRegenerationInterval">
      <description>
        <text>In protocol version 1, the ephemeral server key is automatically regenerated after
this many seconds (if it has been used).  The purpose of regeneration is to prevent
decrypting captured sessions by later breaking into the machine and stealing the keys.
The key is never stored anywhere.  If the value is 0, the key is never regenerated.</text>
      </description>
      <type name="uint16"/>
      <default value="3600"/>
    </leaf>
    <leaf name="ListenAddress">
      <description>
        <text>Specifies the local addresses sshd should listen on.  The following forms may be used:

     ListenAddress host|IPv4_addr|IPv6_addr
     ListenAddress host|IPv4_addr:port
     ListenAddress [host|IPv6_addr]:port

If port is not specified, sshd will listen on the address and all prior Port options
specified.  The default is to listen on all local addresses.  Multiple ListenAddress
options are permitted.  Additionally, any Port options must
precede this option for non-port qualified addresses.</text>
      </description>
      <type name="string"/>
      <default value="host|IPv4_addr|IPv6_addr"/>
    </leaf>
    <leaf name="LoginGraceTime">
      <description>
        <text>The server disconnects after this time if the user has not successfully
logged in.  If the value is 0, there is no time limit.</text>
      </description>
      <type name="uint16"/>
      <default value="120"/>
    </leaf>
    <leaf name="LogLevel">
      <description>
        <text>Gives the verbosity level that is used when logging messages from sshd.</text>
      </description>
      <type name="string"/>
      <default value="QUIET"/>
    </leaf>
    <leaf name="MACs">
      <description>
        <text>Specifies the available MAC (message authentication code) algorithms.</text>
      </description>
      <type name="string"/>
      <default value="hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,\&#10;umac-64-etm@openssh.com,umac-128-etm@openssh.com,\&#10;hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,\&#10;hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,\&#10;hmac-md5-96-etm@openssh.com,\&#10;hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,\&#10;hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,\&#10;hmac-sha1-96,hmac-md5-96"/>
    </leaf>
    <leaf-list name="Match">
      <description>
        <text>Introduces a conditional block.</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf name="MaxAuthTries">
      <description>
        <text>Specifies the maximum number of authentication attempts permitted per connection.</text>
      </description>
      <type name="uint16"/>
      <default value="6"/>
    </leaf>
    <leaf name="MaxSessions">
      <description>
        <text>Specifies the maximum number of open sessions permitted per network connection. </text>
      </description>
      <type name="uint16"/>
      <default value="10"/>
    </leaf>
    <leaf name="MaxStartups">
      <description>
        <text>Specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.  Additional connections will
be dropped until authentication succeeds or the LoginGraceTime expires for a connection.  The default is 10:30:100.</text>
      </description>
      <type name="uint16"/>
      <default value="10"/>
    </leaf>
    <leaf name="OS">
      <description>
        <text>sshd_config files differ among operating systems</text>
      </description>
      <type name="enumeration">
        <enum name="Debian"/>
        <enum name="Fedora"/>
        <enum name="Windows"/>
        <enum name="OSX"/>
        <enum name="OpenWrt"/>
        <enum name="Unknown"/>
      </type>
      <default value="Unknown"/>
    </leaf>
    <leaf name="PasswordAuthentication">
      <description>
        <text>Specifies whether password authentication is allowed.  The default is "yes".</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="PermitEmptyPasswords">
      <description>
        <text>When password authentication is allowed, it specifies whether the server allows login to accounts with empty password
strings.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
    </leaf>
    <leaf name="PermitOpen">
      <description>
        <text>Specifies the destinations to which TCP port forwarding is permitted.  The forwarding specification must be one of the
following forms:

     PermitOpen host:port
     PermitOpen IPv4_addr:port
     PermitOpen [IPv6_addr]:port

Multiple forwards may be specified by separating them with whitespace.  An argument of "any" can be used to remove all
restrictions and permit any forwarding requests.  An argument of "none" can be used to prohibit all forwarding
requests.  By default all port forwarding requests are permitted.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="PermitRootLogin">
      <description>
        <text>Specifies whether root can log in using ssh.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="without_password"/>
        <enum name="forced_commands_only"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="PermitTunnel">
      <description>
        <text>Specifies whether tun device forwarding is allowed.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
    </leaf>
    <leaf name="PermitTTY">
      <description>
        <text>Specifies whether pty allocation is permitted.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="PermitUserEnvironment">
      <description>
        <text>Specifies whether ~/.ssh/environment and environment= options in ~/.ssh/authorized_keys are processed by sshd.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
    </leaf>
    <leaf name="PidFile">
      <description>
        <text>Specifies the file that contains the process ID of the SSH daemon.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="Port">
      <description>
        <text>Specifies the port number that sshd listens on.  </text>
      </description>
      <type name="inet:port-number"/>
      <default value="22"/>
    </leaf>
    <leaf name="PrintLastLog">
      <description>
        <text>Specifies whether sshd should print the date and time of the last user login when a user logs in interactively.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="PrintMotd">
      <description>
        <text>Specifies whether sshd should print /etc/motd when a user logs in interactively.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="Protocol">
      <description>
        <text>Specifies the protocol versions sshd supports.</text>
      </description>
      <type name="string"/>
      <default value="2"/>
    </leaf>
    <leaf name="PubkeyAuthentication">
      <description>
        <text>Specifies whether public key authentication is allowed.  The default is "yes".  Note that this option applies to pro-
tocol version 2 only.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
      <when condition="../Protocol = 2"/>
    </leaf>
    <leaf name="RekeyLimit">
      <description>
        <text>Specifies the maximum amount of data that may be transmitted before the session key is renegotiated, optionally fol-
lowed a maximum amount of time that may pass before the session key is renegotiated.  The first argument is specified
in bytes and may have a suffix of 'K', 'M', or 'G' to indicate Kilobytes, Megabytes, or Gigabytes, respectively.  The
default is between '1G' and '4G', depending on the cipher.  The optional second value is specified in seconds and may
use any of the units documented in the TIME FORMATS section.  The default value for RekeyLimit is "default none",
which means that rekeying is performed after the cipher's default amount of data has been sent or received and no time
based rekeying is done.  This option applies to protocol version 2 only.</text>
      </description>
      <type name="string"/>
      <default value="default none"/>
    </leaf>
    <leaf name="RevokedKeys">
      <description>
        <text>Specifies revoked public keys.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="RhostsRSAAuthentication">
      <description>
        <text>Specifies whether rhosts or /etc/hosts.equiv authentication together with successful RSA host authentication is
allowed.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
      <when condition="../Protocol = 1"/>
    </leaf>
    <leaf name="RSAAuthentication">
      <description>
        <text>Specifies whether pure RSA authentication is allowed.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
      <when condition="../Protocol = 1"/>
    </leaf>
    <leaf name="ServerKeyBits">
      <description>
        <text>Defines the number of bits in the ephemeral protocol version 1 server key.</text>
      </description>
      <type name="uint16"/>
      <default value="1024"/>
    </leaf>
    <leaf name="StrictModes">
      <description>
        <text>Specifies whether sshd should check file modes and ownership of the user's files and home directory before accept-
ing login.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="Subsystem">
      <description>
        <text>Configures an external subsystem (e.g. file transfer daemon).  Arguments should be a subsystem name and a command
(with optional arguments) to execute upon subsystem request.</text>
      </description>
      <type name="string"/>
      <when condition="../Protocol = 2"/>
    </leaf>
    <leaf name="SyslogFacility">
      <description>
        <text>Gives the facility code that is used when logging messages from sshd.  The possible values are: DAEMON, USER, AUTH,
LOCAL0, LOCAL1, LOCAL2, LOCAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7.</text>
      </description>
      <type name="string"/>
      <default value="AUTH"/>
    </leaf>
    <leaf name="TCPKeepAlive">
      <description>
        <text>Specifies whether the system should send TCP keepalive messages to the other side.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="TrustedUserCAKeys">
      <description>
        <text>Specifies a file containing public keys of certificate authorities that are trusted to sign user certificates for
authentication.</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="UseDNS">
      <description>
        <text>Specifies whether sshd should look up the remote host name and check that the resolved host name for the remote IP
address maps back to the very same IP address.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="UseLogin">
      <description>
        <text>Specifies whether login is used for interactive login sessions.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
    </leaf>
    <leaf name="UsePAM">
      <description>
        <text>Enables the Pluggable Authentication Module interface.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
    </leaf>
    <leaf name="UsePrivilegeSeparation">
      <description>
        <text>Specifies whether sshd separates privileges by creating an unprivileged child process to deal with incoming network
traffic.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="VersionAddendum">
      <description>
        <text>Optionally specifies additional text to append to the SSH protocol banner sent by the server upon connection.</text>
      </description>
      <type name="string"/>
      <default value=""/>
    </leaf>
    <leaf name="X11DisplayOffset">
      <description>
        <text>Specifies the first display number available for sshd's X11 forwarding.</text>
      </description>
      <type name="uint16"/>
      <default value="10"/>
    </leaf>
    <leaf name="X11Forwarding">
      <description>
        <text>Specifies whether X11 forwarding is permitted. </text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="no"/>
    </leaf>
    <leaf name="X11UseLocalhost">
      <description>
        <text>Specifies whether sshd should bind the X11 forwarding server to the loopback or wildcard address.</text>
      </description>
      <type name="enumeration">
        <enum name="yes"/>
        <enum name="no"/>
      </type>
      <default value="yes"/>
    </leaf>
    <leaf name="XAuthLocation">
      <description>
        <text>Specifies the full pathname of the xauth program.  The default is /usr/bin/xauth.</text>
      </description>
      <type name="string"/>
    </leaf>
  </container>
</module>
